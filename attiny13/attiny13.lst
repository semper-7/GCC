
attiny13.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000084  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000084  000000f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  000000f8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000010c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000148  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002de  00000000  00000000  00000168  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002a8  00000000  00000000  00000446  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000081  00000000  00000000  000006ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000163  00000000  00000000  0000076f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	0e c0       	rjmp	.+28     	; 0x20 <__bad_interrupt>
   4:	0d c0       	rjmp	.+26     	; 0x20 <__bad_interrupt>
   6:	0c c0       	rjmp	.+24     	; 0x20 <__bad_interrupt>
   8:	0b c0       	rjmp	.+22     	; 0x20 <__bad_interrupt>
   a:	0a c0       	rjmp	.+20     	; 0x20 <__bad_interrupt>
   c:	09 c0       	rjmp	.+18     	; 0x20 <__bad_interrupt>
   e:	08 c0       	rjmp	.+16     	; 0x20 <__bad_interrupt>
  10:	07 c0       	rjmp	.+14     	; 0x20 <__bad_interrupt>
  12:	06 c0       	rjmp	.+12     	; 0x20 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	26 d0       	rcall	.+76     	; 0x6a <main>
  1e:	30 c0       	rjmp	.+96     	; 0x80 <_exit>

00000020 <__bad_interrupt>:
  20:	ef cf       	rjmp	.-34     	; 0x0 <__vectors>

00000022 <LenImp>:
  22:	b4 99       	sbic	0x16, 4	; 22
  24:	fe cf       	rjmp	.-4      	; 0x22 <LenImp>
  26:	90 e0       	ldi	r25, 0x00	; 0
  28:	80 e0       	ldi	r24, 0x00	; 0
  2a:	b4 99       	sbic	0x16, 4	; 22
  2c:	08 95       	ret
  2e:	01 96       	adiw	r24, 0x01	; 1
  30:	fc cf       	rjmp	.-8      	; 0x2a <LenImp+0x8>

00000032 <SendPresense>:
  32:	c4 98       	cbi	0x18, 4	; 24
  34:	bc 9a       	sbi	0x17, 4	; 23
  36:	bc 9a       	sbi	0x17, 4	; 23
  38:	bc 9a       	sbi	0x17, 4	; 23
  3a:	bc 9a       	sbi	0x17, 4	; 23
  3c:	bc 9a       	sbi	0x17, 4	; 23
  3e:	bc 9a       	sbi	0x17, 4	; 23
  40:	bc 9a       	sbi	0x17, 4	; 23
  42:	bc 98       	cbi	0x17, 4	; 23
  44:	08 95       	ret

00000046 <crc8>:
  46:	9b 01       	movw	r18, r22
  48:	48 e0       	ldi	r20, 0x08	; 8
  4a:	50 e0       	ldi	r21, 0x00	; 0
  4c:	bc 01       	movw	r22, r24
  4e:	62 27       	eor	r22, r18
  50:	96 95       	lsr	r25
  52:	87 95       	ror	r24
  54:	60 ff       	sbrs	r22, 0
  56:	03 c0       	rjmp	.+6      	; 0x5e <crc8+0x18>
  58:	6c e0       	ldi	r22, 0x0C	; 12
  5a:	86 27       	eor	r24, r22
  5c:	80 68       	ori	r24, 0x80	; 128
  5e:	36 95       	lsr	r19
  60:	27 95       	ror	r18
  62:	41 50       	subi	r20, 0x01	; 1
  64:	51 09       	sbc	r21, r1
  66:	91 f7       	brne	.-28     	; 0x4c <crc8+0x6>
  68:	08 95       	ret

0000006a <main>:
  6a:	80 e8       	ldi	r24, 0x80	; 128
  6c:	88 b9       	out	0x08, r24	; 8
  6e:	f8 94       	cli
  70:	d8 df       	rcall	.-80     	; 0x22 <LenImp>
  72:	07 97       	sbiw	r24, 0x07	; 7
  74:	10 f0       	brcs	.+4      	; 0x7a <main+0x10>
  76:	dd df       	rcall	.-70     	; 0x32 <SendPresense>
  78:	fb cf       	rjmp	.-10     	; 0x70 <main+0x6>
  7a:	90 e0       	ldi	r25, 0x00	; 0
  7c:	80 e0       	ldi	r24, 0x00	; 0
  7e:	08 95       	ret

00000080 <_exit>:
  80:	f8 94       	cli

00000082 <__stop_program>:
  82:	ff cf       	rjmp	.-2      	; 0x82 <__stop_program>
